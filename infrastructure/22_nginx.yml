AWSTemplateFormatVersion: '2010-09-09'
Description: deploys Nginx server.
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  ClusterSize:
    Description: How many ECS hosts do you want to initially deploy?
    Type: Number
    Default: 1
  ListenPort:
    Type: String
    Default: 8080
  NginxTag:
    Description: the Nginx ECR tag
    Type: String
    Default: 190401
Resources:
  ############################################
  #####           Target Group           #####
  ############################################
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-tg-${ListenPort}
      VpcId:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-vpc
      Port: !Ref ListenPort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      TargetType: ip
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-loadBalancer
      Port: !Ref ListenPort
      Protocol: HTTP
  ECSALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: ALBListener
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref ALBListener
      Priority: 1
  ############################################
  #####         Task Definition          #####
  ############################################
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      TaskRoleArn:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-ecs-task-role
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-ecs-task-role
      ContainerDefinitions:
        - Name: nginx
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nginx:${NginxTag}
          PortMappings:
            - ContainerPort: !Ref ListenPort
              HostPort: !Ref ListenPort
          MemoryReservation: 512
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Fn::ImportValue:
                  !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-log-group
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${EnvironmentName}-nginx
          Environment:
            - Name: "LISTEN_PORT"
              Value: !Ref ListenPort
            - Name: "NGINX_SERVER_NAME"
              Value: !Sub tomcat.${EnvironmentName}
            - Name: "NGINX_SERVER_PORT"
              Value: "9081"
  ############################################
  #####             Service              #####
  ############################################
  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - ECSALBListenerRule
    Properties:
      LaunchType: FARGATE
      DesiredCount: !Ref ClusterSize
      Cluster:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-ecs-cluster
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-ecs-proxy-sg
          Subnets:
            - Fn::ImportValue:
                !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-private-subnet1
            - Fn::ImportValue:
                !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-private-subnet2
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: !Ref ListenPort
          TargetGroupArn: !Ref TargetGroup