AWSTemplateFormatVersion: '2010-09-09'
Description: deploys an Application Load Balancer that exposes our various ECS services.
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
Resources:
  ############################################
  #####           Load Balancer          #####
  ############################################
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-loadBalancer
      Subnets:
        - Fn::ImportValue:
            !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-public-subnet1
        - Fn::ImportValue:
            !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-public-subnet2
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-loadBalancer-sg
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-loadBalancer
  # We define a default target group here, as this is a mandatory Parameters
  # when creating an Application Load Balancer Listener. This is not used, instead
  # a target group is created per-service in each service template (../services/*)
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-tg-default
      VpcId:
        Fn::ImportValue:
          !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-vpc
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      TargetType: ip
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
  DirectListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-loadBalancer
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-loadBalancer-url
  DefaultTargetGroup:
    Value: !Ref DefaultTargetGroup
    Export:
      Name: !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-default-tg
  Listener:
    Description: A reference to a port 80 listener
    Value: !Ref LoadBalancerListener
    Export:
      Name: !Sub ${AWS::AccountId}-${AWS::Region}-${EnvironmentName}-loadBalancer-listener-default